#!/bin/env python
#------------------------------------------------------------------------#
# DataGrid - Tabular Data Rendering Library
# Copyright (C) 2009 Adam Wagner <awagner@redventures.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published 
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#------------------------------------------------------------------------#

import csv
import sys
from optparse import OptionParser
from datagrid.core import DataGrid

def main():

    # Configure & Parse Command-Line args
    parser = OptionParser('Usage: %prog [OPTIONS] DATAFILE')
    parser.add_option('-c', '--column', action='append',
            help='Set the column header') 
    parser.add_option('-a', '--autocolumn', action='store_true',
            help='Derive column headers from DATAFILE')
    parser.add_option('--html', action='store_const', 
            const='datagrid.html', dest='renderer',
            help='Render HTML table')
    parser.add_option('--text', action='store_const',
            const='datagrid.ascii', dest='renderer',
            help='Render Text (ASCII) table')
    parser.add_option('--renderer', dest='renderer', 
            default='datagrid.html', help='Use custom table renderer')
    options, args = parser.parse_args()

    # Load table renderer
    try:
        __import__(options.renderer)
        renderer = sys.modules[options.renderer]
    except ImportError:
        parser.error("%s table renderer could not be found" 
                % options.renderer)

    # Attempt to load datafile
    try:
        data = csv.reader(open(args[0]))    # load data file
        columns = data.next() if options.autocolumn else options.column
    except IndexError:
        parser.error("No file was supplied")
    except IOError:
        parser.error("%s does not exist, or is inaccessable" % args[0])

    # Create datagrid instance and render to stdout
    grid = DataGrid(data,renderer.Renderer(),columns)
    print(grid.render())


# Run if called directly
if __name__ == '__main__': main()

